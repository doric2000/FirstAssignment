// dor.cohen15@msmail.ariel.ac.il
//211896279

מטלה 1 -תכנות מערכות 2

תיאור כללי:

הפרויקט מדגים מימוש של מבנה נתונים מסוג גרף, ומימוש של מספר אלגוריתמים קלאסיים לעבודה על גרפים. כל המימושים כתובים בשפת ++C בצורה מונחית עצמים (OOP), ללא שימוש ב־STL, ומותאמים לדרישות הקורס.

המערכת מאפשרת:

בניית גרף בלתי מכוון עם משקלים

הרצת אלגוריתמים שונים על הגרף

הדפסת עץ תוצאה מכל אלגוריתם

מבנה הפרויקט

קבצי מקור עיקריים

main.cpp – קובץ ההדגמה הראשי. בונה גרף, מריץ את האלגוריתמים ומדפיס את הפלט.

graph.cpp / graph.hpp – מימוש של מבנה גרף באמצעות רשימות סמיכות. כולל פונקציות להוספת קשתות, הדפסה ועוד.

algorithms.cpp – מימוש של אלגוריתמים: BFS, DFS, Dijkstra, Prim, Kruskal.

stack.cpp / stack.hpp – מימוש של מבנה מחסנית עבור DFS.

queue.cpp / queue.hpp – מימוש של תור עבור BFS.

priority_queue.cpp / priority_queue.hpp – מימוש של תור עדיפויות פשוט עבור Dijkstra ו־Prim.

קובץ Makefile

כולל פקודות:

make Main – הידור והרצה של התוכנית הראשית

make valgrind – בדיקת זליגות זיכרון

make clean – ניקוי קבצים זמניים

מחלקות עיקריות

Graph

מייצגת גרף באמצעות רשימות סמיכות. כוללת:

פונקציות להוספת קשתות (מכוונות ולא מכוונות)

הדפסת הגרף

גישה למערך הסמיכויות

Algorithms (סטטי)

מימוש של אלגוריתמים עיקריים:

bfs(Graph&, int) – עץ BFS

dfs(Graph&, int) – עץ DFS

dijkstra(Graph&, int) – עץ מסלולים קצרים ביותר מ־Dijkstra

prim(Graph&) – עץ פורש מינימלי בשיטת Prim

kruskal(Graph&) – עץ פורש מינימלי בשיטת Kruskal

Stack / Queue / PriorityQueue

מבני נתונים תומכים:

Stack – עבור DFS

Queue – עבור BFS

PriorityQueue – עבור Dijkstra ו־Prim (ללא STL)

הפעלה

make Main        # הידור והרצה
make valgrind    # בדיקת זליגות זיכרון
make clean       # ניקוי קבצי o והבינארי

מחבר 211896279